<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netcoreapp3.1</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

        <!-- Set this to true if you enable server-side prerendering -->
        <BuildServerSideRenderer>false</BuildServerSideRenderer>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.App" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.1.2" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.2" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="ClientApp\angular.json">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\e2e\tsconfig.e2e.json">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\package-lock.json">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\package.json">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\src\apple-isle-moot-theme.scss" />
        <Content Include="ClientApp\src\app\activities\activities.component.css" />
        <Content Include="ClientApp\src\app\activities\activities.component.html" />
        <Content Include="ClientApp\src\app\activities\activities.component.ts" />
        <Content Include="ClientApp\src\app\auth.config.ts" />
        <Content Include="ClientApp\src\app\oAuth\callback.component.ts" />
        <Content Include="ClientApp\src\app\oAuth\callback.component.css" />
        <Content Include="ClientApp\src\app\oAuth\login.component.css" />
        <Content Include="ClientApp\src\app\oAuth\login.component.html" />
        <Content Include="ClientApp\src\app\oAuth\login.component.ts" />
        <Content Include="ClientApp\src\app\profile\profile.component.css" />
        <Content Include="ClientApp\src\app\profile\profile.component.html" />
        <Content Include="ClientApp\src\app\profile\profile.component.ts" />
        <Content Include="ClientApp\src\assets\backgrounds\Ulverstone_0.jpg" />
        <Content Include="ClientApp\src\assets\config\config.dev.conf" />
        <Content Include="ClientApp\src\assets\config\config.prod.conf" />
        <Content Include="ClientApp\src\tsconfig.app.json">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\src\tsconfig.server.json">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\src\tsconfig.spec.json">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\src\tslint.json">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\tsconfig.json">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Include="ClientApp\tslint.json">
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
        <None Include="ClientApp\src\app\admin\admin.component.html" />
        <None Include="ClientApp\src\app\admin\admin.component.ts" />
        <None Include="ClientApp\src\app\admin\admin.component.css" />
        <None Include="ClientApp\src\app\components\nav-menu\nav-menu.component.css" />
        <None Include="ClientApp\src\app\components\nav-menu\nav-menu.component.html" />
        <None Include="ClientApp\src\app\home\home.component.css" />
        <None Include="ClientApp\src\app\oAuth\callback.component.html" />
        <None Include="ClientApp\src\assets\materializescss\compiled\materialize.js" />
        <None Include="ClientApp\src\assets\materializescss\js\compiled\materialize.js" />
        <None Include="ClientApp\src\assets\materializescss\js\compiled\materialize.min.js" />
    </ItemGroup>

    <ItemGroup>
      <_ContentIncludedByDefault Remove="ClientApp\angular.json" />
      <_ContentIncludedByDefault Remove="ClientApp\e2e\tsconfig.e2e.json" />
      <_ContentIncludedByDefault Remove="ClientApp\package-lock.json" />
      <_ContentIncludedByDefault Remove="ClientApp\package.json" />
      <_ContentIncludedByDefault Remove="ClientApp\src\tsconfig.app.json" />
      <_ContentIncludedByDefault Remove="ClientApp\src\tsconfig.server.json" />
      <_ContentIncludedByDefault Remove="ClientApp\src\tsconfig.spec.json" />
      <_ContentIncludedByDefault Remove="ClientApp\src\tslint.json" />
      <_ContentIncludedByDefault Remove="ClientApp\tsconfig.json" />
      <_ContentIncludedByDefault Remove="ClientApp\tslint.json" />
      <_ContentIncludedByDefault Remove="Pages\Error.cshtml" />
      <_ContentIncludedByDefault Remove="Pages\_ViewImports.cshtml" />
    </ItemGroup>

    <ItemGroup>
      <TypeScriptCompile Include="ClientApp\src\app\admin\applicationStatusLabel.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\config.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\services\api\admin-api.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\services\api\app-api.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\services\api\application-api.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\services\api\profile-api.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\services\authed-http-client.service.spec.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\services\authed-http-client.service.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\services\helpers\country-state-helper.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\services\helpers\date-helper.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\services\strings\applicationInformation.ts" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
            <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
